cmake_minimum_required(VERSION 3.8 FATAL_ERROR)
project(tinyurdf VERSION 1.0.0 LANGUAGES C CXX)

set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED ON)
set(CMAKE_CXX_EXTENSIONS OFF)
set(CMAKE_EXPORT_COMPILE_COMMANDS ON) # 
set(CMAKE_INSTALL_PREFIX ${CMAKE_BINARY_DIR})
set(CMAKE_SUPPRESS_DEVELOPER_WARNINGS 1)

option(USE_OPENMP "Enable compiling with openMP support" OFF)
option(BUILD_SCRIPTS "Enable building CXX scripts" ON)
option(BUILD_TESTS "Enable building CXX tests" OFF)
option(BUILD_PYTHON3 "Enable building Python3 binaries" OFF)
option(BUILD_DOCS "Enable documentation generation" OFF)

if(NOT CMAKE_BUILD_TYPE)
    set(CMAKE_BUILD_TYPE "Release")
endif()

set(CMAKE_MODULE_PATH "${CMAKE_SOURCE_DIR}/cmake" ${CMAKE_MODULE_PATH})
configure_file(${CMAKE_SOURCE_DIR}/include/tinyurdf/config.h.in config.h @ONLY)

if (CMAKE_CXX_COMPILER_ID STREQUAL "GNU" OR CMAKE_CXX_COMPILER_ID STREQUAL "Clang")
    if(CMAKE_BUILD_TYPE STREQUAL "Debug")
        set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -O0 -g -DDEBUG")
    elseif(CMAKE_BUILD_TYPE STREQUAL "Release")
        set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -O3")
    endif()
elseif (CMAKE_CXX_COMPILER_ID STREQUAL "MSVC")
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /Od")
endif()
if(WIN32)
    cmake_policy(SET CMP0135 NEW)
endif()

include(ExternalEigen)
add_subdirectory(thirdparty/loguru)
add_subdirectory(thirdparty/tinyxml2)
add_subdirectory(src/tinyurdf)

if (BUILD_TESTS)
    include(ExternalGTest)
    add_subdirectory(test)
endif()
if(BUILD_PYTHON3)
    include(ExternalPybind11)
    add_subdirectory(python/src)
endif()
if(BUILD_SCRIPTS)
    add_subdirectory(scripts/src)    
endif()
if(BUILD_DOCS)
    add_subdirectory(docs)
endif()

install(DIRECTORY ${CMAKE_SOURCE_DIR}/include/tinyurdf DESTINATION include)
install(FILES ${CMAKE_BINARY_DIR}/config.h ${CMAKE_BINARY_DIR}/config.h
        DESTINATION include/tinyurdf)
install(TARGETS tinyurdf DESTINATION lib/tinyurdf)